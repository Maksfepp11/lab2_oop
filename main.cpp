#define NOMINMAX  
#define WIN32_LEAN_AND_MEAN  
#include "triangle.h" 
#include <windows.h>  

int choice = 1;  

int main() {
    SetConsoleOutputCP(65001); 
    Triangle t;  // Оголошення об'єкта трикутника
    cout << "Введіть координати трикутника (x1 y1 x2 y2 x3 y3): ";  
    cin >> t.A.x >> t.A.y >> t.B.x >> t.B.y >> t.C.x >> t.C.y;  // Введення координат трьох вершин трикутника

    cout << "Площа трикутника: " << t.area() << endl;  

    cout << "Оберіть метод перевірки приналежності:\n";  
    cout << "1 - Метод площі (Герон)\n";
    cout << "2 - Метод векторного добутку\n";
    cout << "Ваш вибір: ";
    cin >> choice;  

    if (choice == 1) {  
        cout << "Використовується метод площі (Герон)\n";
    } else if (choice == 2) {  
        cout << "Використовується метод векторного добутку\n";
    } else {  
        cout << "Невірний вибір! Використовується метод за замовчуванням (Герон)\n";
        choice = 1; 
    }

    if (t.degenerate()) {  // Перевірка, чи трикутник є виродженим 
        cout << "Трикутник вироджений!" << endl;
    }

    int n;  // Змінна для зберігання кількості точок, для яких перевіряється приналежність
    cout << "Введіть кількість точок: ";  
    cin >> n;  // Введення кількості точок
    while (n < 0 || n > 100) {  
        cout << "Неможливо перевірити приналежність для данної кількості точок. Введіть кількість точок: ";
        cin >> n;  // Введення кількості точок заново в разі помилки
    }
    vector<Point> points(n);  // Вектор для зберігання точок

    for (int i = 0; i < n; ++i) {  // Цикл для обробки кожної точки
        cout << "Введіть координати точки " << i + 1 << " (x y): ";  
        cin >> points[i].x >> points[i].y;  // Введення координат точки

        if (t.on_border(points[i])) {  // Перевірка, чи точка лежить на межі трикутника
            cout << "Точка лежить на межі трикутника." << endl;
        } else if (t.contains(points[i])) {  // Перевірка, чи точка належить трикутнику
            cout << "Точка належить трикутнику." << endl;
        } else {  // Якщо точка не належить трикутнику та не лежить на його межі
            cout << "Точка не належить трикутнику." << endl;
        }
    }

    return 0;  
}
